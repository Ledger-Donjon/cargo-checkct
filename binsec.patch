# Taken from https://github.com/binsec/binsec/issues/38#issuecomment-2018196143
#
# We reproduce here the copyright notice of the concerned files:
# 
# (**************************************************************************)
# (*  This file is part of BINSEC.                                          *)
# (*                                                                        *)
# (*  Copyright (C) 2016-2024                                               *)
# (*    CEA (Commissariat à l'énergie atomique et aux énergies              *)
# (*         alternatives)                                                  *)
# (*                                                                        *)
# (*  you can redistribute it and/or modify it under the terms of the GNU   *)
# (*  Lesser General Public License as published by the Free Software       *)
# (*  Foundation, version 2.1.                                              *)
# (*                                                                        *)
# (*  It is distributed in the hope that it will be useful,                 *)
# (*  but WITHOUT ANY WARRANTY; without even the implied warranty of        *)
# (*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *)
# (*  GNU Lesser General Public License for more details.                   *)
# (*                                                                        *)
# (*  See the GNU Lesser General Public License version 2.1                 *)
# (*  for more details (enclosed in the file licenses/LGPLv2.1).            *)
# (*                                                                        *)
# (**************************************************************************)

diff --git a/src/disasm/riscv/riscv_to_dba.ml b/src/disasm/riscv/riscv_to_dba.ml
index b4602ae..5a04dbb 100644
--- a/src/disasm/riscv/riscv_to_dba.ml
+++ b/src/disasm/riscv/riscv_to_dba.ml
@@ -824,7 +824,7 @@ module Riscv_to_Dba (M : Riscv_arch.RegisterSize) = struct
           Bv.concat
             [
               Bv.extract imm6 { lo = 0; hi = 1 };
-              Bv.extract imm6 { lo = 2; hi = 4 };
+              Bv.extract imm6 { lo = 2; hi = 5 };
             ]
         in
         let offset = scale_by 4 (Bv.extend bvoff mode_size) in
